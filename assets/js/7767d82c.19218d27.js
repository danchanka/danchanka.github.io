"use strict";(self.webpackChunkls_fusion_docs=self.webpackChunkls_fusion_docs||[]).push([[49657],{75529:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var s=t(74848),n=t(28453);const o={title:"Property signature (CLASS)"},a=void 0,i={id:"Property_signature_CLASS",title:"Property signature (CLASS)",description:"The signature operator creates a property which determines whether, in terms of classes, a specified property can have a non-NULL value for the arguments passed or not. In fact, this operator deduces possible classes of a given property from its semantics, after which it uses logical operators and the classification operator to create the required property.",source:"@site/versioned_docs/version-v4/Property_signature_CLASS.md",sourceDirName:".",slug:"/Property_signature_CLASS",permalink:"/v4/Property_signature_CLASS",draft:!1,unlisted:!1,editUrl:"https://github.com/lsfusion/platform/edit/v4/docs/en/Property_signature_CLASS.md",tags:[],version:"v4",lastUpdatedAt:1623249583e3,frontMatter:{title:"Property signature (CLASS)"},sidebar:"learn",previous:{title:"Classification (IS/AS)",permalink:"/v4/Classification_IS_AS"},next:{title:"Selection (CASE, IF, MULTI, OVERRIDE, EXCLUSIVE)",permalink:"/v4/Selection_CASE_IF_MULTI_OVERRIDE_EXCLUSIVE"}},c={},l=[{value:"Language",id:"language",level:3},{value:"Examples",id:"examples",level:3}];function p(e){const r={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:["The signature operator creates a ",(0,s.jsx)(r.a,{href:"/v4/Properties",children:"property"})," which determines whether, in terms of ",(0,s.jsx)(r.a,{href:"/v4/Classes",children:"classes"}),", a specified property can have a non-",(0,s.jsx)(r.code,{children:"NULL"})," value for the arguments passed or not. In fact, this operator deduces possible classes of a given property from its semantics, after which it uses ",(0,s.jsx)(r.a,{href:"/v4/Logical_operators_AND_OR_NOT_XOR",children:"logical"})," operators and the ",(0,s.jsx)(r.a,{href:"/v4/Classification_IS_AS",children:"classification"})," operator to create the required property."]}),"\n",(0,s.jsx)(r.h3,{id:"language",children:"Language"}),"\n",(0,s.jsxs)(r.p,{children:["To implement this operator, use the ",(0,s.jsxs)(r.a,{href:"/v4/CLASS_operator",children:[(0,s.jsx)(r.code,{children:"CLASS"})," operator"]}),"."]}),"\n",(0,s.jsx)(r.h3,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lsf",children:"CLASS A;\r\na = ABSTRACT CASE STRING[100] (A);\r\n\r\nCLASS B : A;\r\nb = DATA STRING[100] (B);\r\n\r\na(B b) += WHEN CLASS(b(b)) THEN b(b); // is equivalent to WHEN b IS B THEN b(b)\n"})})]})}function d(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>a,x:()=>i});var s=t(96540);const n={},o=s.createContext(n);function a(e){const r=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),s.createElement(o.Provider,{value:r},e.children)}}}]);